// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlRepository is a mock of UrlRepository interface.
type MockUrlRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUrlRepositoryMockRecorder
}

// MockUrlRepositoryMockRecorder is the mock recorder for MockUrlRepository.
type MockUrlRepositoryMockRecorder struct {
	mock *MockUrlRepository
}

// NewMockUrlRepository creates a new mock instance.
func NewMockUrlRepository(ctrl *gomock.Controller) *MockUrlRepository {
	mock := &MockUrlRepository{ctrl: ctrl}
	mock.recorder = &MockUrlRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlRepository) EXPECT() *MockUrlRepositoryMockRecorder {
	return m.recorder
}

// CheckLongUrl mocks base method.
func (m *MockUrlRepository) CheckLongUrl(longUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckLongUrl", longUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckLongUrl indicates an expected call of CheckLongUrl.
func (mr *MockUrlRepositoryMockRecorder) CheckLongUrl(longUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckLongUrl", reflect.TypeOf((*MockUrlRepository)(nil).CheckLongUrl), longUrl)
}

// GetLongUrlByShortUrl mocks base method.
func (m *MockUrlRepository) GetLongUrlByShortUrl(shortUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLongUrlByShortUrl", shortUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLongUrlByShortUrl indicates an expected call of GetLongUrlByShortUrl.
func (mr *MockUrlRepositoryMockRecorder) GetLongUrlByShortUrl(shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLongUrlByShortUrl", reflect.TypeOf((*MockUrlRepository)(nil).GetLongUrlByShortUrl), shortUrl)
}

// SaveNewUrl mocks base method.
func (m *MockUrlRepository) SaveNewUrl(longUrl, shortUrl string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveNewUrl", longUrl, shortUrl)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveNewUrl indicates an expected call of SaveNewUrl.
func (mr *MockUrlRepositoryMockRecorder) SaveNewUrl(longUrl, shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveNewUrl", reflect.TypeOf((*MockUrlRepository)(nil).SaveNewUrl), longUrl, shortUrl)
}
